{"name":"Jblog","tagline":"Szablon jekyll-bloga dostosowany do Sigmy.","body":"# Szablon jekyll-bloga\r\n\r\nDostosowany do konfiguracji serwera *Sigma* szablon\r\njekyll-bloga.\r\n\r\n\r\n## Instalacja szablonu\r\n\r\nKlikamy w ikonkę **fork** i natępnie klonujemy sforkowanego bloga\r\nna swoje konto na serwerze *Sigma*.\r\n\r\nCała procedura może wyglądać tak:\r\n<pre>git clone git@github.com:githubusername/jblog.git blog\r\ncd blog\r\n</pre>\r\n\r\nco prawdopodobnie w serwerze sigma będzie wymagało klucza ssh ;/ więc klonowanie przez https będzie bardziej wskazane:\r\n\r\n<pre>git clone https://github.com/githubusername/jblog.git\r\n# Clones your fork of the repository into the current directory in terminal\r\ncd blog\r\n</pre> \r\n\r\n\r\n## Jak zacząć?\r\n\r\nWpisy do bloga umieszczamy w katalogu `_posts`.\r\nNazwy plików z postami tworzymy według schematu:\r\n\r\n    rok-miesiąc-dzień-tytuł.md\r\n\r\nna przykład:\r\n\r\n    2013-02-29-jekyll-howto.md\r\n\r\nPo napisaniu posta generujemy statyczną wersję bloga wykonując\r\nz katalogu z blogiem, czyli z katalogu **blog/** polecenie:\r\n\r\n    jekyll --server PORT # testowanie, localhost:PORT\r\n\r\nJeśli wszystko jest OK, to wdrażamy bloga na Sigmę:\r\n\r\n    rake deploy          # uaktualnić DESTINATION\r\n\r\nPo wykonaniu polecenia blog jest dostępny tutaj:\r\n\r\n<pre>http://sigma.ug.edu.pl/~⟨twój login na <b>sigmie</b>⟩/blog\r\n</pre>\r\n\r\n\r\n## Korzystamy z rozszerzeń\r\n\r\nJak? Opisane jest to w [jekyll_ext](http://github.com/rfelix/jekyll_ext).\r\n\r\n\r\n# Ściąga z Git-a\r\n\r\nKilka użytecznych poleceń…\r\n\r\n## Tracking branches\r\n\r\nPo sforkowaniu projektu, na przykład\r\n[emacs starter kit](https://github.com/technomancy/emacs-starter-kit)\r\nktórego autorem jest *technomancy*, klonujemy repozytorium\r\nprojektu na swój komputer:\r\n\r\n    git clone git@github.com:wbzyl/emacs-starter-kit.git\r\n\r\nJak nakazują dobre obyczaje, dodajemy oryginalne repozytorium\r\ndo swojego jako *remote*:\r\n\r\n    git remote add technomancy git://github.com/technomancy/emacs-starter-kit.git\r\n\r\ni od razu ściągamy oryginał:\r\n\r\n    git fetch technomancy\r\n\r\nPo jakimś czasie zauważamy, że technomancy dodał nową gałąź **v2**:\r\n\r\n    origin/HEAD -> origin/master\r\n    origin/master\r\n    technomancy/master\r\n    technomancy/v2\r\n\r\nOczywiście, natychmiast chcielibyśmy sprawdzić jak działa v2.\r\nNajwygodniej będzie dodać do swojego repozytorium nową gałąź\r\nna którą będziemy pobierać nowe wersje **v2** z repozytorium technomancy.\r\n\r\nW tym celu tworzymy tzw. *tracking branch*:\r\n\r\n    git checkout --track technomancy/v2\r\n    git checkout -b v2.x --track technomancy/v2 # lub tak, zmieniamy nazwę gałęzi na v2.x\r\n\r\nTeraz polecenie:\r\n\r\n    git branch -a\r\n      master\r\n    * v2\r\n      remotes/origin/HEAD -> origin/master\r\n      remotes/origin/master\r\n      remotes/technomancy/master\r\n      remotes/technomancy/v2\r\n\r\npokazuje, że faktycznie jesteśmy jesteśmy na nowej gałęzi.\r\n\r\nRóżnice w kodzie między gałęziami można sprawdzić bez tworzenia\r\nnowej gałęzi:\r\n\r\n    git diff master..technomancy/master\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}